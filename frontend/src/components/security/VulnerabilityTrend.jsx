// src/components/security/VulnerabilityTrend.jsx
import React from 'react';
import { 
  Box, 
  Typography, 
  useTheme
} from '@mui/material';
import {
  ResponsiveContainer,
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend
} from 'recharts';

/**
 * Component for displaying vulnerability trends over time
 * 
 * @param {Object} props - Component props
 * @param {Array} props.data - Array of vulnerability trend data points
 * @param {number} props.height - Height of the chart in pixels (default: 300)
 * @returns {JSX.Element} - VulnerabilityTrend component
 */
const VulnerabilityTrend = ({ data, height = 300 }) => {
  const theme = useTheme();
  
  if (!data || data.length === 0) {
    return (
      <Box textAlign="center" p={3} height={height} display="flex" alignItems="center" justifyContent="center">
        <Typography color="textSecondary">
          No vulnerability trend data available
        </Typography>
      </Box>
    );
  }
  
  // Format date labels for x-axis
  const formatXAxis = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });
  };
  
  // Custom tooltip component
  const CustomTooltip = ({ active, payload, label }) => {
    if (active && payload && payload.length) {
      const date = new Date(label);
      const formattedDate = date.toLocaleDateString(undefined, { 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric' 
      });
      
      return (
        <Box
          sx={{
            bgcolor: 'background.paper',
            p: 2,
            border: '1px solid',
            borderColor: 'divider',
            borderRadius: 1,
            boxShadow: theme.shadows[3]
          }}
        >
          <Typography variant="subtitle2" gutterBottom>
            {formattedDate}
          </Typography>
          
          {payload.map((entry, index) => (
            <Box key={index} sx={{ display: 'flex', alignItems: 'center', my: 0.5 }}>
              <Box
                sx={{
                  width: 12,
                  height: 12,
                  borderRadius: '50%',
                  bgcolor: entry.color,
                  mr: 1
                }}
              />
              <Typography variant="body2" sx={{ mr: 1 }}>
                {entry.name}:
              </Typography>
              <Typography variant="body2" fontWeight="bold">
                {entry.value}
              </Typography>
            </Box>
          ))}
        </Box>
      );
    }
    
    return null;
  };
  
  return (
    <Box height={height}>
      <ResponsiveContainer width="100%" height="100%">
        <LineChart
          data={data}
          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
        >
          <CartesianGrid strokeDasharray="3 3" stroke={theme.palette.divider} />
          <XAxis 
            dataKey="date" 
            tickFormatter={formatXAxis}
            stroke={theme.palette.text.secondary}
          />
          <YAxis stroke={theme.palette.text.secondary} />
          <Tooltip content={<CustomTooltip />} />
          <Legend />
          <Line 
            type="monotone" 
            dataKey="critical" 
            name="Critical" 
            stroke={theme.palette.error.dark} 
            activeDot={{ r: 8 }}
            strokeWidth={2}
          />
          <Line 
            type="monotone" 
            dataKey="high" 
            name="High" 
            stroke={theme.palette.error.main} 
            activeDot={{ r: 6 }}
          />
          <Line 
            type="monotone" 
            dataKey="medium" 
            name="Medium" 
            stroke={theme.palette.warning.main} 
          />
          <Line 
            type="monotone" 
            dataKey="low" 
            name="Low" 
            stroke={theme.palette.info.main} 
          />
          <Line 
            type="monotone" 
            dataKey="total" 
            name="Total" 
            stroke={theme.palette.primary.main}
            dot={false}
            strokeDasharray="3 3"
          />
        </LineChart>
      </ResponsiveContainer>
    </Box>
  );
};

export default VulnerabilityTrend;